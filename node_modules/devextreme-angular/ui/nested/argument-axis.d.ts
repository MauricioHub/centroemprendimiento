/*!
 * devextreme-angular
 * Version: 20.1.7
 * Build date: Tue Aug 25 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy, EventEmitter, QueryList } from '@angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import { format } from 'devextreme/ui/widget/ui.widget';
import { Font } from 'devextreme/viz/core/base_widget';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import { DxiBreakComponent } from './break-dxi';
import { DxiConstantLineComponent } from './constant-line-dxi';
import { DxiStripComponent } from './strip-dxi';
import * as ɵngcc0 from '@angular/core';
export declare class DxoArgumentAxisComponent extends NestedOption implements OnDestroy, OnInit {
    aggregateByCategory: boolean;
    aggregationGroupWidth: number;
    aggregationInterval: number | string | {
        days?: number;
        hours?: number;
        milliseconds?: number;
        minutes?: number;
        months?: number;
        quarters?: number;
        seconds?: number;
        weeks?: number;
        years?: number;
    };
    allowDecimals: boolean;
    argumentType: string;
    axisDivisionFactor: number;
    breaks: Array<DevExpress.viz.ScaleBreak>;
    breakStyle: {
        color?: string;
        line?: string;
        width?: number;
    };
    categories: Array<number | string | Date>;
    color: string;
    constantLines: Array<any | {
        color?: string;
        dashStyle?: string;
        displayBehindSeries?: boolean;
        extendAxis?: boolean;
        label?: {
            font?: Font;
            horizontalAlignment?: string;
            position?: string;
            text?: string;
            verticalAlignment?: string;
            visible?: boolean;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
        value?: Date | number | string;
        width?: number;
    } | {
        color?: string;
        dashStyle?: string;
        displayBehindSeries?: boolean;
        extendAxis?: boolean;
        label?: {
            font?: Font;
            text?: string;
            visible?: boolean;
        };
        value?: Date | number | string;
        width?: number;
    }>;
    constantLineStyle: {
        color?: string;
        dashStyle?: string;
        label?: {
            font?: Font;
            horizontalAlignment?: string;
            position?: string;
            verticalAlignment?: string;
            visible?: boolean;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
        width?: number;
    } | {
        color?: string;
        dashStyle?: string;
        label?: {
            font?: Font;
            visible?: boolean;
        };
        width?: number;
    };
    customPosition: Date | number | string;
    customPositionAxis: string;
    discreteAxisDivisionMode: string;
    endOnTick: boolean;
    grid: {
        color?: string;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    holidays: Array<Date | string | number>;
    hoverMode: string;
    inverted: boolean;
    label: {
        alignment?: string;
        customizeHint?: Function;
        customizeText?: Function;
        displayMode?: string;
        font?: Font;
        format?: format | string;
        indentFromAxis?: number;
        overlappingBehavior?: string;
        position?: string;
        rotationAngle?: number;
        staggeringSpacing?: number;
        textOverflow?: string;
        visible?: boolean;
        wordWrap?: string;
    } | {
        customizeHint?: Function;
        customizeText?: Function;
        font?: Font;
        format?: format | string;
        indentFromAxis?: number;
        overlappingBehavior?: string;
        visible?: boolean;
    };
    linearThreshold: number;
    logarithmBase: number;
    max: Date | number | string;
    maxValueMargin: number;
    min: Date | number | string;
    minorGrid: {
        color?: string;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    minorTick: {
        color?: string;
        length?: number;
        opacity?: number;
        shift?: number;
        visible?: boolean;
        width?: number;
    };
    minorTickCount: number;
    minorTickInterval: number | string | {
        days?: number;
        hours?: number;
        milliseconds?: number;
        minutes?: number;
        months?: number;
        quarters?: number;
        seconds?: number;
        weeks?: number;
        years?: number;
    };
    minValueMargin: number;
    minVisualRangeLength: number | string | {
        days?: number;
        hours?: number;
        milliseconds?: number;
        minutes?: number;
        months?: number;
        quarters?: number;
        seconds?: number;
        weeks?: number;
        years?: number;
    };
    offset: number;
    opacity: number;
    placeholderSize: number;
    position: string;
    singleWorkdays: Array<Date | string | number>;
    strips: Array<any | {
        color?: string;
        endValue?: Date | number | string;
        label?: {
            font?: Font;
            horizontalAlignment?: string;
            text?: string;
            verticalAlignment?: string;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
        startValue?: Date | number | string;
    } | {
        color?: string;
        endValue?: Date | number | string;
        label?: {
            font?: Font;
            text?: string;
        };
        startValue?: Date | number | string;
    }>;
    stripStyle: {
        label?: {
            font?: Font;
            horizontalAlignment?: string;
            verticalAlignment?: string;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
    } | {
        label?: {
            font?: Font;
        };
    };
    tick: {
        color?: string;
        length?: number;
        opacity?: number;
        shift?: number;
        visible?: boolean;
        width?: number;
    };
    tickInterval: number | string | {
        days?: number;
        hours?: number;
        milliseconds?: number;
        minutes?: number;
        months?: number;
        quarters?: number;
        seconds?: number;
        weeks?: number;
        years?: number;
    };
    title: string | {
        alignment?: string;
        font?: Font;
        margin?: number;
        text?: string;
        textOverflow?: string;
        wordWrap?: string;
    };
    type: string;
    valueMarginsEnabled: boolean;
    visible: boolean;
    visualRange: DevExpress.viz.VizRange | Array<number | string | Date>;
    visualRangeUpdateMode: string;
    wholeRange: DevExpress.viz.VizRange | Array<number | string | Date>;
    width: number;
    workdaysOnly: boolean;
    workWeek: Array<number>;
    firstPointOnStartAngle: boolean;
    originValue: number;
    period: number;
    startAngle: number;
    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */
    visualRangeChange: EventEmitter<DevExpress.viz.VizRange | Array<number | string | Date>>;
    protected readonly _optionPath: string;
    breaksChildren: QueryList<DxiBreakComponent>;
    constantLinesChildren: QueryList<DxiConstantLineComponent>;
    stripsChildren: QueryList<DxiStripComponent>;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoArgumentAxisComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoArgumentAxisComponent, "dxo-argument-axis", never, {
    "aggregateByCategory": "aggregateByCategory";
    "aggregationGroupWidth": "aggregationGroupWidth";
    "aggregationInterval": "aggregationInterval";
    "allowDecimals": "allowDecimals";
    "argumentType": "argumentType";
    "axisDivisionFactor": "axisDivisionFactor";
    "breaks": "breaks";
    "breakStyle": "breakStyle";
    "categories": "categories";
    "color": "color";
    "constantLines": "constantLines";
    "constantLineStyle": "constantLineStyle";
    "customPosition": "customPosition";
    "customPositionAxis": "customPositionAxis";
    "discreteAxisDivisionMode": "discreteAxisDivisionMode";
    "endOnTick": "endOnTick";
    "grid": "grid";
    "holidays": "holidays";
    "hoverMode": "hoverMode";
    "inverted": "inverted";
    "label": "label";
    "linearThreshold": "linearThreshold";
    "logarithmBase": "logarithmBase";
    "max": "max";
    "maxValueMargin": "maxValueMargin";
    "min": "min";
    "minorGrid": "minorGrid";
    "minorTick": "minorTick";
    "minorTickCount": "minorTickCount";
    "minorTickInterval": "minorTickInterval";
    "minValueMargin": "minValueMargin";
    "minVisualRangeLength": "minVisualRangeLength";
    "offset": "offset";
    "opacity": "opacity";
    "placeholderSize": "placeholderSize";
    "position": "position";
    "singleWorkdays": "singleWorkdays";
    "strips": "strips";
    "stripStyle": "stripStyle";
    "tick": "tick";
    "tickInterval": "tickInterval";
    "title": "title";
    "type": "type";
    "valueMarginsEnabled": "valueMarginsEnabled";
    "visible": "visible";
    "visualRange": "visualRange";
    "visualRangeUpdateMode": "visualRangeUpdateMode";
    "wholeRange": "wholeRange";
    "width": "width";
    "workdaysOnly": "workdaysOnly";
    "workWeek": "workWeek";
    "firstPointOnStartAngle": "firstPointOnStartAngle";
    "originValue": "originValue";
    "period": "period";
    "startAngle": "startAngle";
}, {
    "visualRangeChange": "visualRangeChange";
}, ["breaksChildren", "constantLinesChildren", "stripsChildren"]>;
}
export declare class DxoArgumentAxisModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoArgumentAxisModule, [typeof DxoArgumentAxisComponent], never, [typeof DxoArgumentAxisComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoArgumentAxisModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJndW1lbnQtYXhpcy5kLnRzIiwic291cmNlcyI6WyJhcmd1bWVudC1heGlzLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcVBBOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqIFZlcnNpb246IDIwLjEuN1xyXG4gKiBCdWlsZCBkYXRlOiBUdWUgQXVnIDI1IDIwMjBcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICpcclxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xyXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcclxuICovXHJcbmltcG9ydCB7IE9uSW5pdCwgT25EZXN0cm95LCBFdmVudEVtaXR0ZXIsIFF1ZXJ5TGlzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgRGV2RXhwcmVzcyBmcm9tICdkZXZleHRyZW1lL2J1bmRsZXMvZHguYWxsJztcclxuaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAnZGV2ZXh0cmVtZS91aS93aWRnZXQvdWkud2lkZ2V0JztcclxuaW1wb3J0IHsgRm9udCB9IGZyb20gJ2RldmV4dHJlbWUvdml6L2NvcmUvYmFzZV93aWRnZXQnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb25Ib3N0IH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb24gfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IER4aUJyZWFrQ29tcG9uZW50IH0gZnJvbSAnLi9icmVhay1keGknO1xyXG5pbXBvcnQgeyBEeGlDb25zdGFudExpbmVDb21wb25lbnQgfSBmcm9tICcuL2NvbnN0YW50LWxpbmUtZHhpJztcclxuaW1wb3J0IHsgRHhpU3RyaXBDb21wb25lbnQgfSBmcm9tICcuL3N0cmlwLWR4aSc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIER4b0FyZ3VtZW50QXhpc0NvbXBvbmVudCBleHRlbmRzIE5lc3RlZE9wdGlvbiBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0IHtcclxuICAgIGFnZ3JlZ2F0ZUJ5Q2F0ZWdvcnk6IGJvb2xlYW47XHJcbiAgICBhZ2dyZWdhdGlvbkdyb3VwV2lkdGg6IG51bWJlcjtcclxuICAgIGFnZ3JlZ2F0aW9uSW50ZXJ2YWw6IG51bWJlciB8IHN0cmluZyB8IHtcclxuICAgICAgICBkYXlzPzogbnVtYmVyO1xyXG4gICAgICAgIGhvdXJzPzogbnVtYmVyO1xyXG4gICAgICAgIG1pbGxpc2Vjb25kcz86IG51bWJlcjtcclxuICAgICAgICBtaW51dGVzPzogbnVtYmVyO1xyXG4gICAgICAgIG1vbnRocz86IG51bWJlcjtcclxuICAgICAgICBxdWFydGVycz86IG51bWJlcjtcclxuICAgICAgICBzZWNvbmRzPzogbnVtYmVyO1xyXG4gICAgICAgIHdlZWtzPzogbnVtYmVyO1xyXG4gICAgICAgIHllYXJzPzogbnVtYmVyO1xyXG4gICAgfTtcclxuICAgIGFsbG93RGVjaW1hbHM6IGJvb2xlYW47XHJcbiAgICBhcmd1bWVudFR5cGU6IHN0cmluZztcclxuICAgIGF4aXNEaXZpc2lvbkZhY3RvcjogbnVtYmVyO1xyXG4gICAgYnJlYWtzOiBBcnJheTxEZXZFeHByZXNzLnZpei5TY2FsZUJyZWFrPjtcclxuICAgIGJyZWFrU3R5bGU6IHtcclxuICAgICAgICBjb2xvcj86IHN0cmluZztcclxuICAgICAgICBsaW5lPzogc3RyaW5nO1xyXG4gICAgICAgIHdpZHRoPzogbnVtYmVyO1xyXG4gICAgfTtcclxuICAgIGNhdGVnb3JpZXM6IEFycmF5PG51bWJlciB8IHN0cmluZyB8IERhdGU+O1xyXG4gICAgY29sb3I6IHN0cmluZztcclxuICAgIGNvbnN0YW50TGluZXM6IEFycmF5PGFueSB8IHtcclxuICAgICAgICBjb2xvcj86IHN0cmluZztcclxuICAgICAgICBkYXNoU3R5bGU/OiBzdHJpbmc7XHJcbiAgICAgICAgZGlzcGxheUJlaGluZFNlcmllcz86IGJvb2xlYW47XHJcbiAgICAgICAgZXh0ZW5kQXhpcz86IGJvb2xlYW47XHJcbiAgICAgICAgbGFiZWw/OiB7XHJcbiAgICAgICAgICAgIGZvbnQ/OiBGb250O1xyXG4gICAgICAgICAgICBob3Jpem9udGFsQWxpZ25tZW50Pzogc3RyaW5nO1xyXG4gICAgICAgICAgICBwb3NpdGlvbj86IHN0cmluZztcclxuICAgICAgICAgICAgdGV4dD86IHN0cmluZztcclxuICAgICAgICAgICAgdmVydGljYWxBbGlnbm1lbnQ/OiBzdHJpbmc7XHJcbiAgICAgICAgICAgIHZpc2libGU/OiBib29sZWFuO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcGFkZGluZ0xlZnRSaWdodD86IG51bWJlcjtcclxuICAgICAgICBwYWRkaW5nVG9wQm90dG9tPzogbnVtYmVyO1xyXG4gICAgICAgIHZhbHVlPzogRGF0ZSB8IG51bWJlciB8IHN0cmluZztcclxuICAgICAgICB3aWR0aD86IG51bWJlcjtcclxuICAgIH0gfCB7XHJcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XHJcbiAgICAgICAgZGFzaFN0eWxlPzogc3RyaW5nO1xyXG4gICAgICAgIGRpc3BsYXlCZWhpbmRTZXJpZXM/OiBib29sZWFuO1xyXG4gICAgICAgIGV4dGVuZEF4aXM/OiBib29sZWFuO1xyXG4gICAgICAgIGxhYmVsPzoge1xyXG4gICAgICAgICAgICBmb250PzogRm9udDtcclxuICAgICAgICAgICAgdGV4dD86IHN0cmluZztcclxuICAgICAgICAgICAgdmlzaWJsZT86IGJvb2xlYW47XHJcbiAgICAgICAgfTtcclxuICAgICAgICB2YWx1ZT86IERhdGUgfCBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICAgICAgd2lkdGg/OiBudW1iZXI7XHJcbiAgICB9PjtcclxuICAgIGNvbnN0YW50TGluZVN0eWxlOiB7XHJcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XHJcbiAgICAgICAgZGFzaFN0eWxlPzogc3RyaW5nO1xyXG4gICAgICAgIGxhYmVsPzoge1xyXG4gICAgICAgICAgICBmb250PzogRm9udDtcclxuICAgICAgICAgICAgaG9yaXpvbnRhbEFsaWdubWVudD86IHN0cmluZztcclxuICAgICAgICAgICAgcG9zaXRpb24/OiBzdHJpbmc7XHJcbiAgICAgICAgICAgIHZlcnRpY2FsQWxpZ25tZW50Pzogc3RyaW5nO1xyXG4gICAgICAgICAgICB2aXNpYmxlPzogYm9vbGVhbjtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHBhZGRpbmdMZWZ0UmlnaHQ/OiBudW1iZXI7XHJcbiAgICAgICAgcGFkZGluZ1RvcEJvdHRvbT86IG51bWJlcjtcclxuICAgICAgICB3aWR0aD86IG51bWJlcjtcclxuICAgIH0gfCB7XHJcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XHJcbiAgICAgICAgZGFzaFN0eWxlPzogc3RyaW5nO1xyXG4gICAgICAgIGxhYmVsPzoge1xyXG4gICAgICAgICAgICBmb250PzogRm9udDtcclxuICAgICAgICAgICAgdmlzaWJsZT86IGJvb2xlYW47XHJcbiAgICAgICAgfTtcclxuICAgICAgICB3aWR0aD86IG51bWJlcjtcclxuICAgIH07XHJcbiAgICBjdXN0b21Qb3NpdGlvbjogRGF0ZSB8IG51bWJlciB8IHN0cmluZztcclxuICAgIGN1c3RvbVBvc2l0aW9uQXhpczogc3RyaW5nO1xyXG4gICAgZGlzY3JldGVBeGlzRGl2aXNpb25Nb2RlOiBzdHJpbmc7XHJcbiAgICBlbmRPblRpY2s6IGJvb2xlYW47XHJcbiAgICBncmlkOiB7XHJcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XHJcbiAgICAgICAgb3BhY2l0eT86IG51bWJlcjtcclxuICAgICAgICB2aXNpYmxlPzogYm9vbGVhbjtcclxuICAgICAgICB3aWR0aD86IG51bWJlcjtcclxuICAgIH07XHJcbiAgICBob2xpZGF5czogQXJyYXk8RGF0ZSB8IHN0cmluZyB8IG51bWJlcj47XHJcbiAgICBob3Zlck1vZGU6IHN0cmluZztcclxuICAgIGludmVydGVkOiBib29sZWFuO1xyXG4gICAgbGFiZWw6IHtcclxuICAgICAgICBhbGlnbm1lbnQ/OiBzdHJpbmc7XHJcbiAgICAgICAgY3VzdG9taXplSGludD86IEZ1bmN0aW9uO1xyXG4gICAgICAgIGN1c3RvbWl6ZVRleHQ/OiBGdW5jdGlvbjtcclxuICAgICAgICBkaXNwbGF5TW9kZT86IHN0cmluZztcclxuICAgICAgICBmb250PzogRm9udDtcclxuICAgICAgICBmb3JtYXQ/OiBmb3JtYXQgfCBzdHJpbmc7XHJcbiAgICAgICAgaW5kZW50RnJvbUF4aXM/OiBudW1iZXI7XHJcbiAgICAgICAgb3ZlcmxhcHBpbmdCZWhhdmlvcj86IHN0cmluZztcclxuICAgICAgICBwb3NpdGlvbj86IHN0cmluZztcclxuICAgICAgICByb3RhdGlvbkFuZ2xlPzogbnVtYmVyO1xyXG4gICAgICAgIHN0YWdnZXJpbmdTcGFjaW5nPzogbnVtYmVyO1xyXG4gICAgICAgIHRleHRPdmVyZmxvdz86IHN0cmluZztcclxuICAgICAgICB2aXNpYmxlPzogYm9vbGVhbjtcclxuICAgICAgICB3b3JkV3JhcD86IHN0cmluZztcclxuICAgIH0gfCB7XHJcbiAgICAgICAgY3VzdG9taXplSGludD86IEZ1bmN0aW9uO1xyXG4gICAgICAgIGN1c3RvbWl6ZVRleHQ/OiBGdW5jdGlvbjtcclxuICAgICAgICBmb250PzogRm9udDtcclxuICAgICAgICBmb3JtYXQ/OiBmb3JtYXQgfCBzdHJpbmc7XHJcbiAgICAgICAgaW5kZW50RnJvbUF4aXM/OiBudW1iZXI7XHJcbiAgICAgICAgb3ZlcmxhcHBpbmdCZWhhdmlvcj86IHN0cmluZztcclxuICAgICAgICB2aXNpYmxlPzogYm9vbGVhbjtcclxuICAgIH07XHJcbiAgICBsaW5lYXJUaHJlc2hvbGQ6IG51bWJlcjtcclxuICAgIGxvZ2FyaXRobUJhc2U6IG51bWJlcjtcclxuICAgIG1heDogRGF0ZSB8IG51bWJlciB8IHN0cmluZztcclxuICAgIG1heFZhbHVlTWFyZ2luOiBudW1iZXI7XHJcbiAgICBtaW46IERhdGUgfCBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICBtaW5vckdyaWQ6IHtcclxuICAgICAgICBjb2xvcj86IHN0cmluZztcclxuICAgICAgICBvcGFjaXR5PzogbnVtYmVyO1xyXG4gICAgICAgIHZpc2libGU/OiBib29sZWFuO1xyXG4gICAgICAgIHdpZHRoPzogbnVtYmVyO1xyXG4gICAgfTtcclxuICAgIG1pbm9yVGljazoge1xyXG4gICAgICAgIGNvbG9yPzogc3RyaW5nO1xyXG4gICAgICAgIGxlbmd0aD86IG51bWJlcjtcclxuICAgICAgICBvcGFjaXR5PzogbnVtYmVyO1xyXG4gICAgICAgIHNoaWZ0PzogbnVtYmVyO1xyXG4gICAgICAgIHZpc2libGU/OiBib29sZWFuO1xyXG4gICAgICAgIHdpZHRoPzogbnVtYmVyO1xyXG4gICAgfTtcclxuICAgIG1pbm9yVGlja0NvdW50OiBudW1iZXI7XHJcbiAgICBtaW5vclRpY2tJbnRlcnZhbDogbnVtYmVyIHwgc3RyaW5nIHwge1xyXG4gICAgICAgIGRheXM/OiBudW1iZXI7XHJcbiAgICAgICAgaG91cnM/OiBudW1iZXI7XHJcbiAgICAgICAgbWlsbGlzZWNvbmRzPzogbnVtYmVyO1xyXG4gICAgICAgIG1pbnV0ZXM/OiBudW1iZXI7XHJcbiAgICAgICAgbW9udGhzPzogbnVtYmVyO1xyXG4gICAgICAgIHF1YXJ0ZXJzPzogbnVtYmVyO1xyXG4gICAgICAgIHNlY29uZHM/OiBudW1iZXI7XHJcbiAgICAgICAgd2Vla3M/OiBudW1iZXI7XHJcbiAgICAgICAgeWVhcnM/OiBudW1iZXI7XHJcbiAgICB9O1xyXG4gICAgbWluVmFsdWVNYXJnaW46IG51bWJlcjtcclxuICAgIG1pblZpc3VhbFJhbmdlTGVuZ3RoOiBudW1iZXIgfCBzdHJpbmcgfCB7XHJcbiAgICAgICAgZGF5cz86IG51bWJlcjtcclxuICAgICAgICBob3Vycz86IG51bWJlcjtcclxuICAgICAgICBtaWxsaXNlY29uZHM/OiBudW1iZXI7XHJcbiAgICAgICAgbWludXRlcz86IG51bWJlcjtcclxuICAgICAgICBtb250aHM/OiBudW1iZXI7XHJcbiAgICAgICAgcXVhcnRlcnM/OiBudW1iZXI7XHJcbiAgICAgICAgc2Vjb25kcz86IG51bWJlcjtcclxuICAgICAgICB3ZWVrcz86IG51bWJlcjtcclxuICAgICAgICB5ZWFycz86IG51bWJlcjtcclxuICAgIH07XHJcbiAgICBvZmZzZXQ6IG51bWJlcjtcclxuICAgIG9wYWNpdHk6IG51bWJlcjtcclxuICAgIHBsYWNlaG9sZGVyU2l6ZTogbnVtYmVyO1xyXG4gICAgcG9zaXRpb246IHN0cmluZztcclxuICAgIHNpbmdsZVdvcmtkYXlzOiBBcnJheTxEYXRlIHwgc3RyaW5nIHwgbnVtYmVyPjtcclxuICAgIHN0cmlwczogQXJyYXk8YW55IHwge1xyXG4gICAgICAgIGNvbG9yPzogc3RyaW5nO1xyXG4gICAgICAgIGVuZFZhbHVlPzogRGF0ZSB8IG51bWJlciB8IHN0cmluZztcclxuICAgICAgICBsYWJlbD86IHtcclxuICAgICAgICAgICAgZm9udD86IEZvbnQ7XHJcbiAgICAgICAgICAgIGhvcml6b250YWxBbGlnbm1lbnQ/OiBzdHJpbmc7XHJcbiAgICAgICAgICAgIHRleHQ/OiBzdHJpbmc7XHJcbiAgICAgICAgICAgIHZlcnRpY2FsQWxpZ25tZW50Pzogc3RyaW5nO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcGFkZGluZ0xlZnRSaWdodD86IG51bWJlcjtcclxuICAgICAgICBwYWRkaW5nVG9wQm90dG9tPzogbnVtYmVyO1xyXG4gICAgICAgIHN0YXJ0VmFsdWU/OiBEYXRlIHwgbnVtYmVyIHwgc3RyaW5nO1xyXG4gICAgfSB8IHtcclxuICAgICAgICBjb2xvcj86IHN0cmluZztcclxuICAgICAgICBlbmRWYWx1ZT86IERhdGUgfCBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICAgICAgbGFiZWw/OiB7XHJcbiAgICAgICAgICAgIGZvbnQ/OiBGb250O1xyXG4gICAgICAgICAgICB0ZXh0Pzogc3RyaW5nO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgc3RhcnRWYWx1ZT86IERhdGUgfCBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICB9PjtcclxuICAgIHN0cmlwU3R5bGU6IHtcclxuICAgICAgICBsYWJlbD86IHtcclxuICAgICAgICAgICAgZm9udD86IEZvbnQ7XHJcbiAgICAgICAgICAgIGhvcml6b250YWxBbGlnbm1lbnQ/OiBzdHJpbmc7XHJcbiAgICAgICAgICAgIHZlcnRpY2FsQWxpZ25tZW50Pzogc3RyaW5nO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgcGFkZGluZ0xlZnRSaWdodD86IG51bWJlcjtcclxuICAgICAgICBwYWRkaW5nVG9wQm90dG9tPzogbnVtYmVyO1xyXG4gICAgfSB8IHtcclxuICAgICAgICBsYWJlbD86IHtcclxuICAgICAgICAgICAgZm9udD86IEZvbnQ7XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcbiAgICB0aWNrOiB7XHJcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XHJcbiAgICAgICAgbGVuZ3RoPzogbnVtYmVyO1xyXG4gICAgICAgIG9wYWNpdHk/OiBudW1iZXI7XHJcbiAgICAgICAgc2hpZnQ/OiBudW1iZXI7XHJcbiAgICAgICAgdmlzaWJsZT86IGJvb2xlYW47XHJcbiAgICAgICAgd2lkdGg/OiBudW1iZXI7XHJcbiAgICB9O1xyXG4gICAgdGlja0ludGVydmFsOiBudW1iZXIgfCBzdHJpbmcgfCB7XHJcbiAgICAgICAgZGF5cz86IG51bWJlcjtcclxuICAgICAgICBob3Vycz86IG51bWJlcjtcclxuICAgICAgICBtaWxsaXNlY29uZHM/OiBudW1iZXI7XHJcbiAgICAgICAgbWludXRlcz86IG51bWJlcjtcclxuICAgICAgICBtb250aHM/OiBudW1iZXI7XHJcbiAgICAgICAgcXVhcnRlcnM/OiBudW1iZXI7XHJcbiAgICAgICAgc2Vjb25kcz86IG51bWJlcjtcclxuICAgICAgICB3ZWVrcz86IG51bWJlcjtcclxuICAgICAgICB5ZWFycz86IG51bWJlcjtcclxuICAgIH07XHJcbiAgICB0aXRsZTogc3RyaW5nIHwge1xyXG4gICAgICAgIGFsaWdubWVudD86IHN0cmluZztcclxuICAgICAgICBmb250PzogRm9udDtcclxuICAgICAgICBtYXJnaW4/OiBudW1iZXI7XHJcbiAgICAgICAgdGV4dD86IHN0cmluZztcclxuICAgICAgICB0ZXh0T3ZlcmZsb3c/OiBzdHJpbmc7XHJcbiAgICAgICAgd29yZFdyYXA/OiBzdHJpbmc7XHJcbiAgICB9O1xyXG4gICAgdHlwZTogc3RyaW5nO1xyXG4gICAgdmFsdWVNYXJnaW5zRW5hYmxlZDogYm9vbGVhbjtcclxuICAgIHZpc2libGU6IGJvb2xlYW47XHJcbiAgICB2aXN1YWxSYW5nZTogRGV2RXhwcmVzcy52aXouVml6UmFuZ2UgfCBBcnJheTxudW1iZXIgfCBzdHJpbmcgfCBEYXRlPjtcclxuICAgIHZpc3VhbFJhbmdlVXBkYXRlTW9kZTogc3RyaW5nO1xyXG4gICAgd2hvbGVSYW5nZTogRGV2RXhwcmVzcy52aXouVml6UmFuZ2UgfCBBcnJheTxudW1iZXIgfCBzdHJpbmcgfCBEYXRlPjtcclxuICAgIHdpZHRoOiBudW1iZXI7XHJcbiAgICB3b3JrZGF5c09ubHk6IGJvb2xlYW47XHJcbiAgICB3b3JrV2VlazogQXJyYXk8bnVtYmVyPjtcclxuICAgIGZpcnN0UG9pbnRPblN0YXJ0QW5nbGU6IGJvb2xlYW47XHJcbiAgICBvcmlnaW5WYWx1ZTogbnVtYmVyO1xyXG4gICAgcGVyaW9kOiBudW1iZXI7XHJcbiAgICBzdGFydEFuZ2xlOiBudW1iZXI7XHJcbiAgICAvKiogVGhpcyBtZW1iZXIgc3VwcG9ydHMgdGhlIGludGVybmFsIGluZnJhc3RydWN0dXJlIGFuZCBpcyBub3QgaW50ZW5kZWQgdG8gYmUgdXNlZCBkaXJlY3RseSBmcm9tIHlvdXIgY29kZS4gKi9cclxuICAgIHZpc3VhbFJhbmdlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8RGV2RXhwcmVzcy52aXouVml6UmFuZ2UgfCBBcnJheTxudW1iZXIgfCBzdHJpbmcgfCBEYXRlPj47XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX29wdGlvblBhdGg6IHN0cmluZztcclxuICAgIGJyZWFrc0NoaWxkcmVuOiBRdWVyeUxpc3Q8RHhpQnJlYWtDb21wb25lbnQ+O1xyXG4gICAgY29uc3RhbnRMaW5lc0NoaWxkcmVuOiBRdWVyeUxpc3Q8RHhpQ29uc3RhbnRMaW5lQ29tcG9uZW50PjtcclxuICAgIHN0cmlwc0NoaWxkcmVuOiBRdWVyeUxpc3Q8RHhpU3RyaXBDb21wb25lbnQ+O1xyXG4gICAgY29uc3RydWN0b3IocGFyZW50T3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCwgb3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCk7XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxufVxyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeG9Bcmd1bWVudEF4aXNNb2R1bGUge1xyXG59XHJcbiJdfQ==
/*!
 * devextreme-angular
 * Version: 20.1.7
 * Build date: Tue Aug 25 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { Font } from 'devextreme/viz/core/base_widget';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxoCommonAxisSettingsComponent extends NestedOption implements OnDestroy, OnInit {
    allowDecimals: boolean;
    breakStyle: {
        color?: string;
        line?: string;
        width?: number;
    };
    color: string;
    constantLineStyle: {
        color?: string;
        dashStyle?: string;
        label?: {
            font?: Font;
            position?: string;
            visible?: boolean;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
        width?: number;
    } | {
        color?: string;
        dashStyle?: string;
        label?: {
            font?: Font;
            visible?: boolean;
        };
        width?: number;
    };
    discreteAxisDivisionMode: string;
    endOnTick: boolean;
    grid: {
        color?: string;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    inverted: boolean;
    label: {
        alignment?: string;
        displayMode?: string;
        font?: Font;
        indentFromAxis?: number;
        overlappingBehavior?: string;
        position?: string;
        rotationAngle?: number;
        staggeringSpacing?: number;
        textOverflow?: string;
        visible?: boolean;
        wordWrap?: string;
    } | {
        font?: Font;
        indentFromAxis?: number;
        overlappingBehavior?: string;
        visible?: boolean;
    };
    maxValueMargin: number;
    minorGrid: {
        color?: string;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    minorTick: {
        color?: string;
        length?: number;
        opacity?: number;
        shift?: number;
        visible?: boolean;
        width?: number;
    } | {
        color?: string;
        length?: number;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    minValueMargin: number;
    opacity: number;
    placeholderSize: number;
    stripStyle: {
        label?: {
            font?: Font;
            horizontalAlignment?: string;
            verticalAlignment?: string;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
    } | {
        label?: {
            font?: Font;
        };
    };
    tick: {
        color?: string;
        length?: number;
        opacity?: number;
        shift?: number;
        visible?: boolean;
        width?: number;
    } | {
        color?: string;
        length?: number;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    title: {
        alignment?: string;
        font?: Font;
        margin?: number;
        textOverflow?: string;
        wordWrap?: string;
    };
    valueMarginsEnabled: boolean;
    visible: boolean;
    width: number;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoCommonAxisSettingsComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoCommonAxisSettingsComponent, "dxo-common-axis-settings", never, {
    "allowDecimals": "allowDecimals";
    "breakStyle": "breakStyle";
    "color": "color";
    "constantLineStyle": "constantLineStyle";
    "discreteAxisDivisionMode": "discreteAxisDivisionMode";
    "endOnTick": "endOnTick";
    "grid": "grid";
    "inverted": "inverted";
    "label": "label";
    "maxValueMargin": "maxValueMargin";
    "minorGrid": "minorGrid";
    "minorTick": "minorTick";
    "minValueMargin": "minValueMargin";
    "opacity": "opacity";
    "placeholderSize": "placeholderSize";
    "stripStyle": "stripStyle";
    "tick": "tick";
    "title": "title";
    "valueMarginsEnabled": "valueMarginsEnabled";
    "visible": "visible";
    "width": "width";
}, {}, never>;
}
export declare class DxoCommonAxisSettingsModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoCommonAxisSettingsModule, [typeof DxoCommonAxisSettingsComponent], never, [typeof DxoCommonAxisSettingsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoCommonAxisSettingsModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLWF4aXMtc2V0dGluZ3MuZC50cyIsInNvdXJjZXMiOlsiY29tbW9uLWF4aXMtc2V0dGluZ3MuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQkE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdIQTs7OztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAyMC4xLjdcclxuICogQnVpbGQgZGF0ZTogVHVlIEF1ZyAyNSAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgeyBPbkluaXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGb250IH0gZnJvbSAnZGV2ZXh0cmVtZS92aXovY29yZS9iYXNlX3dpZGdldCc7XHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbkhvc3QgfSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE5lc3RlZE9wdGlvbiB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHhvQ29tbW9uQXhpc1NldHRpbmdzQ29tcG9uZW50IGV4dGVuZHMgTmVzdGVkT3B0aW9uIGltcGxlbWVudHMgT25EZXN0cm95LCBPbkluaXQge1xyXG4gICAgYWxsb3dEZWNpbWFsczogYm9vbGVhbjtcclxuICAgIGJyZWFrU3R5bGU6IHtcclxuICAgICAgICBjb2xvcj86IHN0cmluZztcclxuICAgICAgICBsaW5lPzogc3RyaW5nO1xyXG4gICAgICAgIHdpZHRoPzogbnVtYmVyO1xyXG4gICAgfTtcclxuICAgIGNvbG9yOiBzdHJpbmc7XHJcbiAgICBjb25zdGFudExpbmVTdHlsZToge1xyXG4gICAgICAgIGNvbG9yPzogc3RyaW5nO1xyXG4gICAgICAgIGRhc2hTdHlsZT86IHN0cmluZztcclxuICAgICAgICBsYWJlbD86IHtcclxuICAgICAgICAgICAgZm9udD86IEZvbnQ7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uPzogc3RyaW5nO1xyXG4gICAgICAgICAgICB2aXNpYmxlPzogYm9vbGVhbjtcclxuICAgICAgICB9O1xyXG4gICAgICAgIHBhZGRpbmdMZWZ0UmlnaHQ/OiBudW1iZXI7XHJcbiAgICAgICAgcGFkZGluZ1RvcEJvdHRvbT86IG51bWJlcjtcclxuICAgICAgICB3aWR0aD86IG51bWJlcjtcclxuICAgIH0gfCB7XHJcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XHJcbiAgICAgICAgZGFzaFN0eWxlPzogc3RyaW5nO1xyXG4gICAgICAgIGxhYmVsPzoge1xyXG4gICAgICAgICAgICBmb250PzogRm9udDtcclxuICAgICAgICAgICAgdmlzaWJsZT86IGJvb2xlYW47XHJcbiAgICAgICAgfTtcclxuICAgICAgICB3aWR0aD86IG51bWJlcjtcclxuICAgIH07XHJcbiAgICBkaXNjcmV0ZUF4aXNEaXZpc2lvbk1vZGU6IHN0cmluZztcclxuICAgIGVuZE9uVGljazogYm9vbGVhbjtcclxuICAgIGdyaWQ6IHtcclxuICAgICAgICBjb2xvcj86IHN0cmluZztcclxuICAgICAgICBvcGFjaXR5PzogbnVtYmVyO1xyXG4gICAgICAgIHZpc2libGU/OiBib29sZWFuO1xyXG4gICAgICAgIHdpZHRoPzogbnVtYmVyO1xyXG4gICAgfTtcclxuICAgIGludmVydGVkOiBib29sZWFuO1xyXG4gICAgbGFiZWw6IHtcclxuICAgICAgICBhbGlnbm1lbnQ/OiBzdHJpbmc7XHJcbiAgICAgICAgZGlzcGxheU1vZGU/OiBzdHJpbmc7XHJcbiAgICAgICAgZm9udD86IEZvbnQ7XHJcbiAgICAgICAgaW5kZW50RnJvbUF4aXM/OiBudW1iZXI7XHJcbiAgICAgICAgb3ZlcmxhcHBpbmdCZWhhdmlvcj86IHN0cmluZztcclxuICAgICAgICBwb3NpdGlvbj86IHN0cmluZztcclxuICAgICAgICByb3RhdGlvbkFuZ2xlPzogbnVtYmVyO1xyXG4gICAgICAgIHN0YWdnZXJpbmdTcGFjaW5nPzogbnVtYmVyO1xyXG4gICAgICAgIHRleHRPdmVyZmxvdz86IHN0cmluZztcclxuICAgICAgICB2aXNpYmxlPzogYm9vbGVhbjtcclxuICAgICAgICB3b3JkV3JhcD86IHN0cmluZztcclxuICAgIH0gfCB7XHJcbiAgICAgICAgZm9udD86IEZvbnQ7XHJcbiAgICAgICAgaW5kZW50RnJvbUF4aXM/OiBudW1iZXI7XHJcbiAgICAgICAgb3ZlcmxhcHBpbmdCZWhhdmlvcj86IHN0cmluZztcclxuICAgICAgICB2aXNpYmxlPzogYm9vbGVhbjtcclxuICAgIH07XHJcbiAgICBtYXhWYWx1ZU1hcmdpbjogbnVtYmVyO1xyXG4gICAgbWlub3JHcmlkOiB7XHJcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XHJcbiAgICAgICAgb3BhY2l0eT86IG51bWJlcjtcclxuICAgICAgICB2aXNpYmxlPzogYm9vbGVhbjtcclxuICAgICAgICB3aWR0aD86IG51bWJlcjtcclxuICAgIH07XHJcbiAgICBtaW5vclRpY2s6IHtcclxuICAgICAgICBjb2xvcj86IHN0cmluZztcclxuICAgICAgICBsZW5ndGg/OiBudW1iZXI7XHJcbiAgICAgICAgb3BhY2l0eT86IG51bWJlcjtcclxuICAgICAgICBzaGlmdD86IG51bWJlcjtcclxuICAgICAgICB2aXNpYmxlPzogYm9vbGVhbjtcclxuICAgICAgICB3aWR0aD86IG51bWJlcjtcclxuICAgIH0gfCB7XHJcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XHJcbiAgICAgICAgbGVuZ3RoPzogbnVtYmVyO1xyXG4gICAgICAgIG9wYWNpdHk/OiBudW1iZXI7XHJcbiAgICAgICAgdmlzaWJsZT86IGJvb2xlYW47XHJcbiAgICAgICAgd2lkdGg/OiBudW1iZXI7XHJcbiAgICB9O1xyXG4gICAgbWluVmFsdWVNYXJnaW46IG51bWJlcjtcclxuICAgIG9wYWNpdHk6IG51bWJlcjtcclxuICAgIHBsYWNlaG9sZGVyU2l6ZTogbnVtYmVyO1xyXG4gICAgc3RyaXBTdHlsZToge1xyXG4gICAgICAgIGxhYmVsPzoge1xyXG4gICAgICAgICAgICBmb250PzogRm9udDtcclxuICAgICAgICAgICAgaG9yaXpvbnRhbEFsaWdubWVudD86IHN0cmluZztcclxuICAgICAgICAgICAgdmVydGljYWxBbGlnbm1lbnQ/OiBzdHJpbmc7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBwYWRkaW5nTGVmdFJpZ2h0PzogbnVtYmVyO1xyXG4gICAgICAgIHBhZGRpbmdUb3BCb3R0b20/OiBudW1iZXI7XHJcbiAgICB9IHwge1xyXG4gICAgICAgIGxhYmVsPzoge1xyXG4gICAgICAgICAgICBmb250PzogRm9udDtcclxuICAgICAgICB9O1xyXG4gICAgfTtcclxuICAgIHRpY2s6IHtcclxuICAgICAgICBjb2xvcj86IHN0cmluZztcclxuICAgICAgICBsZW5ndGg/OiBudW1iZXI7XHJcbiAgICAgICAgb3BhY2l0eT86IG51bWJlcjtcclxuICAgICAgICBzaGlmdD86IG51bWJlcjtcclxuICAgICAgICB2aXNpYmxlPzogYm9vbGVhbjtcclxuICAgICAgICB3aWR0aD86IG51bWJlcjtcclxuICAgIH0gfCB7XHJcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XHJcbiAgICAgICAgbGVuZ3RoPzogbnVtYmVyO1xyXG4gICAgICAgIG9wYWNpdHk/OiBudW1iZXI7XHJcbiAgICAgICAgdmlzaWJsZT86IGJvb2xlYW47XHJcbiAgICAgICAgd2lkdGg/OiBudW1iZXI7XHJcbiAgICB9O1xyXG4gICAgdGl0bGU6IHtcclxuICAgICAgICBhbGlnbm1lbnQ/OiBzdHJpbmc7XHJcbiAgICAgICAgZm9udD86IEZvbnQ7XHJcbiAgICAgICAgbWFyZ2luPzogbnVtYmVyO1xyXG4gICAgICAgIHRleHRPdmVyZmxvdz86IHN0cmluZztcclxuICAgICAgICB3b3JkV3JhcD86IHN0cmluZztcclxuICAgIH07XHJcbiAgICB2YWx1ZU1hcmdpbnNFbmFibGVkOiBib29sZWFuO1xyXG4gICAgdmlzaWJsZTogYm9vbGVhbjtcclxuICAgIHdpZHRoOiBudW1iZXI7XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX29wdGlvblBhdGg6IHN0cmluZztcclxuICAgIGNvbnN0cnVjdG9yKHBhcmVudE9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QsIG9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QpO1xyXG4gICAgbmdPbkluaXQoKTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbn1cclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHhvQ29tbW9uQXhpc1NldHRpbmdzTW9kdWxlIHtcclxufVxyXG4iXX0=
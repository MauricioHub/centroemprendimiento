/*!
 * devextreme-angular
 * Version: 20.1.7
 * Build date: Tue Aug 25 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxoFieldPanelComponent extends NestedOption implements OnDestroy, OnInit {
    allowFieldDragging: boolean;
    showColumnFields: boolean;
    showDataFields: boolean;
    showFilterFields: boolean;
    showRowFields: boolean;
    texts: {
        columnFieldArea?: string;
        dataFieldArea?: string;
        filterFieldArea?: string;
        rowFieldArea?: string;
    };
    visible: boolean;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoFieldPanelComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoFieldPanelComponent, "dxo-field-panel", never, {
    "allowFieldDragging": "allowFieldDragging";
    "showColumnFields": "showColumnFields";
    "showDataFields": "showDataFields";
    "showFilterFields": "showFilterFields";
    "showRowFields": "showRowFields";
    "texts": "texts";
    "visible": "visible";
}, {}, never>;
}
export declare class DxoFieldPanelModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoFieldPanelModule, [typeof DxoFieldPanelComponent], never, [typeof DxoFieldPanelComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoFieldPanelModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQtcGFuZWwuZC50cyIsInNvdXJjZXMiOlsiZmllbGQtcGFuZWwuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztBQWVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkE7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBkZXZleHRyZW1lLWFuZ3VsYXJcclxuICogVmVyc2lvbjogMjAuMS43XHJcbiAqIEJ1aWxkIGRhdGU6IFR1ZSBBdWcgMjUgMjAyMFxyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgLSAyMDIwIERldmVsb3BlciBFeHByZXNzIEluYy4gQUxMIFJJR0hUUyBSRVNFUlZFRFxyXG4gKlxyXG4gKiBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXHJcbiAqIG9mIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgZm9yIGRldGFpbHMuXHJcbiAqXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL2RldmV4dHJlbWUtYW5ndWxhclxyXG4gKi9cclxuaW1wb3J0IHsgT25Jbml0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uSG9zdCB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeG9GaWVsZFBhbmVsQ29tcG9uZW50IGV4dGVuZHMgTmVzdGVkT3B0aW9uIGltcGxlbWVudHMgT25EZXN0cm95LCBPbkluaXQge1xyXG4gICAgYWxsb3dGaWVsZERyYWdnaW5nOiBib29sZWFuO1xyXG4gICAgc2hvd0NvbHVtbkZpZWxkczogYm9vbGVhbjtcclxuICAgIHNob3dEYXRhRmllbGRzOiBib29sZWFuO1xyXG4gICAgc2hvd0ZpbHRlckZpZWxkczogYm9vbGVhbjtcclxuICAgIHNob3dSb3dGaWVsZHM6IGJvb2xlYW47XHJcbiAgICB0ZXh0czoge1xyXG4gICAgICAgIGNvbHVtbkZpZWxkQXJlYT86IHN0cmluZztcclxuICAgICAgICBkYXRhRmllbGRBcmVhPzogc3RyaW5nO1xyXG4gICAgICAgIGZpbHRlckZpZWxkQXJlYT86IHN0cmluZztcclxuICAgICAgICByb3dGaWVsZEFyZWE/OiBzdHJpbmc7XHJcbiAgICB9O1xyXG4gICAgdmlzaWJsZTogYm9vbGVhbjtcclxuICAgIHByb3RlY3RlZCByZWFkb25seSBfb3B0aW9uUGF0aDogc3RyaW5nO1xyXG4gICAgY29uc3RydWN0b3IocGFyZW50T3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCwgb3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCk7XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxufVxyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeG9GaWVsZFBhbmVsTW9kdWxlIHtcclxufVxyXG4iXX0=
/*!
 * devextreme-angular
 * Version: 20.1.7
 * Build date: Tue Aug 25 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { EventEmitter, QueryList } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { DxiDataGridColumn } from './base/data-grid-column-dxi';
import { DxiButtonComponent } from './button-dxi';
import { DxiValidationRuleComponent } from './validation-rule-dxi';
import * as ɵngcc0 from '@angular/core';
export declare class DxiColumnComponent extends DxiDataGridColumn {
    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */
    filterValueChange: EventEmitter<any>;
    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */
    filterValuesChange: EventEmitter<Array<any>>;
    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */
    groupIndexChange: EventEmitter<number>;
    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */
    selectedFilterOperationChange: EventEmitter<string>;
    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */
    sortIndexChange: EventEmitter<number>;
    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */
    sortOrderChange: EventEmitter<string>;
    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */
    visibleChange: EventEmitter<boolean>;
    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */
    visibleIndexChange: EventEmitter<number>;
    protected readonly _optionPath: string;
    buttonsChildren: QueryList<DxiButtonComponent>;
    columnsChildren: QueryList<DxiColumnComponent>;
    validationRulesChildren: QueryList<DxiValidationRuleComponent>;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxiColumnComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxiColumnComponent, "dxi-column", never, {
    "alignment": "alignment";
    "allowEditing": "allowEditing";
    "allowExporting": "allowExporting";
    "allowFiltering": "allowFiltering";
    "allowFixing": "allowFixing";
    "allowGrouping": "allowGrouping";
    "allowHeaderFiltering": "allowHeaderFiltering";
    "allowHiding": "allowHiding";
    "allowReordering": "allowReordering";
    "allowResizing": "allowResizing";
    "allowSearch": "allowSearch";
    "allowSorting": "allowSorting";
    "autoExpandGroup": "autoExpandGroup";
    "buttons": "buttons";
    "calculateCellValue": "calculateCellValue";
    "calculateDisplayValue": "calculateDisplayValue";
    "calculateFilterExpression": "calculateFilterExpression";
    "calculateGroupValue": "calculateGroupValue";
    "calculateSortValue": "calculateSortValue";
    "caption": "caption";
    "cellTemplate": "cellTemplate";
    "columns": "columns";
    "cssClass": "cssClass";
    "customizeText": "customizeText";
    "dataField": "dataField";
    "dataType": "dataType";
    "editCellTemplate": "editCellTemplate";
    "editorOptions": "editorOptions";
    "encodeHtml": "encodeHtml";
    "falseText": "falseText";
    "filterOperations": "filterOperations";
    "filterType": "filterType";
    "filterValue": "filterValue";
    "filterValues": "filterValues";
    "fixed": "fixed";
    "fixedPosition": "fixedPosition";
    "format": "format";
    "formItem": "formItem";
    "groupCellTemplate": "groupCellTemplate";
    "groupIndex": "groupIndex";
    "headerCellTemplate": "headerCellTemplate";
    "headerFilter": "headerFilter";
    "hidingPriority": "hidingPriority";
    "isBand": "isBand";
    "lookup": "lookup";
    "minWidth": "minWidth";
    "name": "name";
    "ownerBand": "ownerBand";
    "renderAsync": "renderAsync";
    "selectedFilterOperation": "selectedFilterOperation";
    "setCellValue": "setCellValue";
    "showEditorAlways": "showEditorAlways";
    "showInColumnChooser": "showInColumnChooser";
    "showWhenGrouped": "showWhenGrouped";
    "sortIndex": "sortIndex";
    "sortingMethod": "sortingMethod";
    "sortOrder": "sortOrder";
    "trueText": "trueText";
    "type": "type";
    "validationRules": "validationRules";
    "visible": "visible";
    "visibleIndex": "visibleIndex";
    "width": "width";
}, {
    "filterValueChange": "filterValueChange";
    "filterValuesChange": "filterValuesChange";
    "groupIndexChange": "groupIndexChange";
    "selectedFilterOperationChange": "selectedFilterOperationChange";
    "sortIndexChange": "sortIndexChange";
    "sortOrderChange": "sortOrderChange";
    "visibleChange": "visibleChange";
    "visibleIndexChange": "visibleIndexChange";
}, ["buttonsChildren", "columnsChildren", "validationRulesChildren"]>;
}
export declare class DxiColumnModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxiColumnModule, [typeof DxiColumnComponent], never, [typeof DxiColumnComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxiColumnModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sdW1uLWR4aS5kLnRzIiwic291cmNlcyI6WyJjb2x1bW4tZHhpLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXNCQTs7OztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAyMC4xLjdcclxuICogQnVpbGQgZGF0ZTogVHVlIEF1ZyAyNSAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIsIFF1ZXJ5TGlzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBOZXN0ZWRPcHRpb25Ib3N0IH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEeGlEYXRhR3JpZENvbHVtbiB9IGZyb20gJy4vYmFzZS9kYXRhLWdyaWQtY29sdW1uLWR4aSc7XHJcbmltcG9ydCB7IER4aUJ1dHRvbkNvbXBvbmVudCB9IGZyb20gJy4vYnV0dG9uLWR4aSc7XHJcbmltcG9ydCB7IER4aVZhbGlkYXRpb25SdWxlQ29tcG9uZW50IH0gZnJvbSAnLi92YWxpZGF0aW9uLXJ1bGUtZHhpJztcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRHhpQ29sdW1uQ29tcG9uZW50IGV4dGVuZHMgRHhpRGF0YUdyaWRDb2x1bW4ge1xyXG4gICAgLyoqIFRoaXMgbWVtYmVyIHN1cHBvcnRzIHRoZSBpbnRlcm5hbCBpbmZyYXN0cnVjdHVyZSBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIHVzZWQgZGlyZWN0bHkgZnJvbSB5b3VyIGNvZGUuICovXHJcbiAgICBmaWx0ZXJWYWx1ZUNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XHJcbiAgICAvKiogVGhpcyBtZW1iZXIgc3VwcG9ydHMgdGhlIGludGVybmFsIGluZnJhc3RydWN0dXJlIGFuZCBpcyBub3QgaW50ZW5kZWQgdG8gYmUgdXNlZCBkaXJlY3RseSBmcm9tIHlvdXIgY29kZS4gKi9cclxuICAgIGZpbHRlclZhbHVlc0NoYW5nZTogRXZlbnRFbWl0dGVyPEFycmF5PGFueT4+O1xyXG4gICAgLyoqIFRoaXMgbWVtYmVyIHN1cHBvcnRzIHRoZSBpbnRlcm5hbCBpbmZyYXN0cnVjdHVyZSBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIHVzZWQgZGlyZWN0bHkgZnJvbSB5b3VyIGNvZGUuICovXHJcbiAgICBncm91cEluZGV4Q2hhbmdlOiBFdmVudEVtaXR0ZXI8bnVtYmVyPjtcclxuICAgIC8qKiBUaGlzIG1lbWJlciBzdXBwb3J0cyB0aGUgaW50ZXJuYWwgaW5mcmFzdHJ1Y3R1cmUgYW5kIGlzIG5vdCBpbnRlbmRlZCB0byBiZSB1c2VkIGRpcmVjdGx5IGZyb20geW91ciBjb2RlLiAqL1xyXG4gICAgc2VsZWN0ZWRGaWx0ZXJPcGVyYXRpb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xyXG4gICAgLyoqIFRoaXMgbWVtYmVyIHN1cHBvcnRzIHRoZSBpbnRlcm5hbCBpbmZyYXN0cnVjdHVyZSBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIHVzZWQgZGlyZWN0bHkgZnJvbSB5b3VyIGNvZGUuICovXHJcbiAgICBzb3J0SW5kZXhDaGFuZ2U6IEV2ZW50RW1pdHRlcjxudW1iZXI+O1xyXG4gICAgLyoqIFRoaXMgbWVtYmVyIHN1cHBvcnRzIHRoZSBpbnRlcm5hbCBpbmZyYXN0cnVjdHVyZSBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIHVzZWQgZGlyZWN0bHkgZnJvbSB5b3VyIGNvZGUuICovXHJcbiAgICBzb3J0T3JkZXJDaGFuZ2U6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xyXG4gICAgLyoqIFRoaXMgbWVtYmVyIHN1cHBvcnRzIHRoZSBpbnRlcm5hbCBpbmZyYXN0cnVjdHVyZSBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIHVzZWQgZGlyZWN0bHkgZnJvbSB5b3VyIGNvZGUuICovXHJcbiAgICB2aXNpYmxlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XHJcbiAgICAvKiogVGhpcyBtZW1iZXIgc3VwcG9ydHMgdGhlIGludGVybmFsIGluZnJhc3RydWN0dXJlIGFuZCBpcyBub3QgaW50ZW5kZWQgdG8gYmUgdXNlZCBkaXJlY3RseSBmcm9tIHlvdXIgY29kZS4gKi9cclxuICAgIHZpc2libGVJbmRleENoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX29wdGlvblBhdGg6IHN0cmluZztcclxuICAgIGJ1dHRvbnNDaGlsZHJlbjogUXVlcnlMaXN0PER4aUJ1dHRvbkNvbXBvbmVudD47XHJcbiAgICBjb2x1bW5zQ2hpbGRyZW46IFF1ZXJ5TGlzdDxEeGlDb2x1bW5Db21wb25lbnQ+O1xyXG4gICAgdmFsaWRhdGlvblJ1bGVzQ2hpbGRyZW46IFF1ZXJ5TGlzdDxEeGlWYWxpZGF0aW9uUnVsZUNvbXBvbmVudD47XHJcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnRPcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0LCBvcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0KTtcclxufVxyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeGlDb2x1bW5Nb2R1bGUge1xyXG59XHJcbiJdfQ==
/*!
 * devextreme-angular
 * Version: 20.1.7
 * Build date: Tue Aug 25 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxoTextsComponent extends NestedOption implements OnDestroy, OnInit {
    fix: string;
    leftPosition: string;
    rightPosition: string;
    unfix: string;
    addRow: string;
    cancelAllChanges: string;
    cancelRowChanges: string;
    confirmDeleteMessage: string;
    confirmDeleteTitle: string;
    deleteRow: string;
    editRow: string;
    saveAllChanges: string;
    saveRowChanges: string;
    undeleteRow: string;
    validationCancelChanges: string;
    exportAll: string;
    exportSelectedRows: string;
    exportTo: string;
    clearFilter: string;
    createFilter: string;
    filterEnabledHint: string;
    groupByThisColumn: string;
    groupContinuedMessage: string;
    groupContinuesMessage: string;
    ungroup: string;
    ungroupAll: string;
    cancel: string;
    emptyValue: string;
    ok: string;
    avg: string;
    avgOtherColumn: string;
    count: string;
    max: string;
    maxOtherColumn: string;
    min: string;
    minOtherColumn: string;
    sum: string;
    sumOtherColumn: string;
    allFields: string;
    columnFields: string;
    dataFields: string;
    filterFields: string;
    rowFields: string;
    columnFieldArea: string;
    dataFieldArea: string;
    filterFieldArea: string;
    rowFieldArea: string;
    collapseAll: string;
    dataNotAvailable: string;
    expandAll: string;
    exportToExcel: string;
    grandTotal: string;
    noData: string;
    removeAllSorting: string;
    showFieldChooser: string;
    sortColumnBySummary: string;
    sortRowBySummary: string;
    total: string;
    addRowToNode: string;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoTextsComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoTextsComponent, "dxo-texts", never, {
    "fix": "fix";
    "leftPosition": "leftPosition";
    "rightPosition": "rightPosition";
    "unfix": "unfix";
    "addRow": "addRow";
    "cancelAllChanges": "cancelAllChanges";
    "cancelRowChanges": "cancelRowChanges";
    "confirmDeleteMessage": "confirmDeleteMessage";
    "confirmDeleteTitle": "confirmDeleteTitle";
    "deleteRow": "deleteRow";
    "editRow": "editRow";
    "saveAllChanges": "saveAllChanges";
    "saveRowChanges": "saveRowChanges";
    "undeleteRow": "undeleteRow";
    "validationCancelChanges": "validationCancelChanges";
    "exportAll": "exportAll";
    "exportSelectedRows": "exportSelectedRows";
    "exportTo": "exportTo";
    "clearFilter": "clearFilter";
    "createFilter": "createFilter";
    "filterEnabledHint": "filterEnabledHint";
    "groupByThisColumn": "groupByThisColumn";
    "groupContinuedMessage": "groupContinuedMessage";
    "groupContinuesMessage": "groupContinuesMessage";
    "ungroup": "ungroup";
    "ungroupAll": "ungroupAll";
    "cancel": "cancel";
    "emptyValue": "emptyValue";
    "ok": "ok";
    "avg": "avg";
    "avgOtherColumn": "avgOtherColumn";
    "count": "count";
    "max": "max";
    "maxOtherColumn": "maxOtherColumn";
    "min": "min";
    "minOtherColumn": "minOtherColumn";
    "sum": "sum";
    "sumOtherColumn": "sumOtherColumn";
    "allFields": "allFields";
    "columnFields": "columnFields";
    "dataFields": "dataFields";
    "filterFields": "filterFields";
    "rowFields": "rowFields";
    "columnFieldArea": "columnFieldArea";
    "dataFieldArea": "dataFieldArea";
    "filterFieldArea": "filterFieldArea";
    "rowFieldArea": "rowFieldArea";
    "collapseAll": "collapseAll";
    "dataNotAvailable": "dataNotAvailable";
    "expandAll": "expandAll";
    "exportToExcel": "exportToExcel";
    "grandTotal": "grandTotal";
    "noData": "noData";
    "removeAllSorting": "removeAllSorting";
    "showFieldChooser": "showFieldChooser";
    "sortColumnBySummary": "sortColumnBySummary";
    "sortRowBySummary": "sortRowBySummary";
    "total": "total";
    "addRowToNode": "addRowToNode";
}, {}, never>;
}
export declare class DxoTextsModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoTextsModule, [typeof DxoTextsComponent], never, [typeof DxoTextsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoTextsModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dHMuZC50cyIsInNvdXJjZXMiOlsidGV4dHMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztBQWVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnRUE7Ozs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBkZXZleHRyZW1lLWFuZ3VsYXJcclxuICogVmVyc2lvbjogMjAuMS43XHJcbiAqIEJ1aWxkIGRhdGU6IFR1ZSBBdWcgMjUgMjAyMFxyXG4gKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgLSAyMDIwIERldmVsb3BlciBFeHByZXNzIEluYy4gQUxMIFJJR0hUUyBSRVNFUlZFRFxyXG4gKlxyXG4gKiBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXHJcbiAqIG9mIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgZm9yIGRldGFpbHMuXHJcbiAqXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL2RldmV4dHJlbWUtYW5ndWxhclxyXG4gKi9cclxuaW1wb3J0IHsgT25Jbml0LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uSG9zdCB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeG9UZXh0c0NvbXBvbmVudCBleHRlbmRzIE5lc3RlZE9wdGlvbiBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0IHtcclxuICAgIGZpeDogc3RyaW5nO1xyXG4gICAgbGVmdFBvc2l0aW9uOiBzdHJpbmc7XHJcbiAgICByaWdodFBvc2l0aW9uOiBzdHJpbmc7XHJcbiAgICB1bmZpeDogc3RyaW5nO1xyXG4gICAgYWRkUm93OiBzdHJpbmc7XHJcbiAgICBjYW5jZWxBbGxDaGFuZ2VzOiBzdHJpbmc7XHJcbiAgICBjYW5jZWxSb3dDaGFuZ2VzOiBzdHJpbmc7XHJcbiAgICBjb25maXJtRGVsZXRlTWVzc2FnZTogc3RyaW5nO1xyXG4gICAgY29uZmlybURlbGV0ZVRpdGxlOiBzdHJpbmc7XHJcbiAgICBkZWxldGVSb3c6IHN0cmluZztcclxuICAgIGVkaXRSb3c6IHN0cmluZztcclxuICAgIHNhdmVBbGxDaGFuZ2VzOiBzdHJpbmc7XHJcbiAgICBzYXZlUm93Q2hhbmdlczogc3RyaW5nO1xyXG4gICAgdW5kZWxldGVSb3c6IHN0cmluZztcclxuICAgIHZhbGlkYXRpb25DYW5jZWxDaGFuZ2VzOiBzdHJpbmc7XHJcbiAgICBleHBvcnRBbGw6IHN0cmluZztcclxuICAgIGV4cG9ydFNlbGVjdGVkUm93czogc3RyaW5nO1xyXG4gICAgZXhwb3J0VG86IHN0cmluZztcclxuICAgIGNsZWFyRmlsdGVyOiBzdHJpbmc7XHJcbiAgICBjcmVhdGVGaWx0ZXI6IHN0cmluZztcclxuICAgIGZpbHRlckVuYWJsZWRIaW50OiBzdHJpbmc7XHJcbiAgICBncm91cEJ5VGhpc0NvbHVtbjogc3RyaW5nO1xyXG4gICAgZ3JvdXBDb250aW51ZWRNZXNzYWdlOiBzdHJpbmc7XHJcbiAgICBncm91cENvbnRpbnVlc01lc3NhZ2U6IHN0cmluZztcclxuICAgIHVuZ3JvdXA6IHN0cmluZztcclxuICAgIHVuZ3JvdXBBbGw6IHN0cmluZztcclxuICAgIGNhbmNlbDogc3RyaW5nO1xyXG4gICAgZW1wdHlWYWx1ZTogc3RyaW5nO1xyXG4gICAgb2s6IHN0cmluZztcclxuICAgIGF2Zzogc3RyaW5nO1xyXG4gICAgYXZnT3RoZXJDb2x1bW46IHN0cmluZztcclxuICAgIGNvdW50OiBzdHJpbmc7XHJcbiAgICBtYXg6IHN0cmluZztcclxuICAgIG1heE90aGVyQ29sdW1uOiBzdHJpbmc7XHJcbiAgICBtaW46IHN0cmluZztcclxuICAgIG1pbk90aGVyQ29sdW1uOiBzdHJpbmc7XHJcbiAgICBzdW06IHN0cmluZztcclxuICAgIHN1bU90aGVyQ29sdW1uOiBzdHJpbmc7XHJcbiAgICBhbGxGaWVsZHM6IHN0cmluZztcclxuICAgIGNvbHVtbkZpZWxkczogc3RyaW5nO1xyXG4gICAgZGF0YUZpZWxkczogc3RyaW5nO1xyXG4gICAgZmlsdGVyRmllbGRzOiBzdHJpbmc7XHJcbiAgICByb3dGaWVsZHM6IHN0cmluZztcclxuICAgIGNvbHVtbkZpZWxkQXJlYTogc3RyaW5nO1xyXG4gICAgZGF0YUZpZWxkQXJlYTogc3RyaW5nO1xyXG4gICAgZmlsdGVyRmllbGRBcmVhOiBzdHJpbmc7XHJcbiAgICByb3dGaWVsZEFyZWE6IHN0cmluZztcclxuICAgIGNvbGxhcHNlQWxsOiBzdHJpbmc7XHJcbiAgICBkYXRhTm90QXZhaWxhYmxlOiBzdHJpbmc7XHJcbiAgICBleHBhbmRBbGw6IHN0cmluZztcclxuICAgIGV4cG9ydFRvRXhjZWw6IHN0cmluZztcclxuICAgIGdyYW5kVG90YWw6IHN0cmluZztcclxuICAgIG5vRGF0YTogc3RyaW5nO1xyXG4gICAgcmVtb3ZlQWxsU29ydGluZzogc3RyaW5nO1xyXG4gICAgc2hvd0ZpZWxkQ2hvb3Nlcjogc3RyaW5nO1xyXG4gICAgc29ydENvbHVtbkJ5U3VtbWFyeTogc3RyaW5nO1xyXG4gICAgc29ydFJvd0J5U3VtbWFyeTogc3RyaW5nO1xyXG4gICAgdG90YWw6IHN0cmluZztcclxuICAgIGFkZFJvd1RvTm9kZTogc3RyaW5nO1xyXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IF9vcHRpb25QYXRoOiBzdHJpbmc7XHJcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnRPcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0LCBvcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0KTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIER4b1RleHRzTW9kdWxlIHtcclxufVxyXG4iXX0=
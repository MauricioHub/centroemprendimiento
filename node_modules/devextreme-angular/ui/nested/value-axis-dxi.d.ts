/*!
 * devextreme-angular
 * Version: 20.1.7
 * Build date: Tue Aug 25 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { EventEmitter, QueryList } from '@angular/core';
import DevExpress from 'devextreme/bundles/dx.all';
import { format } from 'devextreme/ui/widget/ui.widget';
import { Font } from 'devextreme/viz/core/base_widget';
import { NestedOptionHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import { DxiBreakComponent } from './break-dxi';
import { DxiConstantLineComponent } from './constant-line-dxi';
import { DxiStripComponent } from './strip-dxi';
import * as ɵngcc0 from '@angular/core';
export declare class DxiValueAxisComponent extends CollectionNestedOption {
    allowDecimals: boolean;
    autoBreaksEnabled: boolean;
    axisDivisionFactor: number;
    breaks: Array<DevExpress.viz.ScaleBreak>;
    breakStyle: {
        color?: string;
        line?: string;
        width?: number;
    };
    categories: Array<number | string | Date>;
    color: string;
    constantLines: Array<any | {
        color?: string;
        dashStyle?: string;
        displayBehindSeries?: boolean;
        extendAxis?: boolean;
        label?: {
            font?: Font;
            horizontalAlignment?: string;
            position?: string;
            text?: string;
            verticalAlignment?: string;
            visible?: boolean;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
        value?: Date | number | string;
        width?: number;
    }>;
    constantLineStyle: {
        color?: string;
        dashStyle?: string;
        label?: {
            font?: Font;
            horizontalAlignment?: string;
            position?: string;
            verticalAlignment?: string;
            visible?: boolean;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
        width?: number;
    };
    customPosition: Date | number | string;
    discreteAxisDivisionMode: string;
    endOnTick: boolean;
    grid: {
        color?: string;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    inverted: boolean;
    label: {
        alignment?: string;
        customizeHint?: Function;
        customizeText?: Function;
        displayMode?: string;
        font?: Font;
        format?: format | string;
        indentFromAxis?: number;
        overlappingBehavior?: string;
        position?: string;
        rotationAngle?: number;
        staggeringSpacing?: number;
        textOverflow?: string;
        visible?: boolean;
        wordWrap?: string;
    };
    linearThreshold: number;
    logarithmBase: number;
    max: Date | number | string;
    maxAutoBreakCount: number;
    maxValueMargin: number;
    min: Date | number | string;
    minorGrid: {
        color?: string;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    minorTick: {
        color?: string;
        length?: number;
        opacity?: number;
        shift?: number;
        visible?: boolean;
        width?: number;
    };
    minorTickCount: number;
    minorTickInterval: number | string | {
        days?: number;
        hours?: number;
        milliseconds?: number;
        minutes?: number;
        months?: number;
        quarters?: number;
        seconds?: number;
        weeks?: number;
        years?: number;
    };
    minValueMargin: number;
    minVisualRangeLength: number | string | {
        days?: number;
        hours?: number;
        milliseconds?: number;
        minutes?: number;
        months?: number;
        quarters?: number;
        seconds?: number;
        weeks?: number;
        years?: number;
    };
    multipleAxesSpacing: number;
    name: string;
    offset: number;
    opacity: number;
    pane: string;
    placeholderSize: number;
    position: string;
    showZero: boolean;
    strips: Array<any | {
        color?: string;
        endValue?: Date | number | string;
        label?: {
            font?: Font;
            horizontalAlignment?: string;
            text?: string;
            verticalAlignment?: string;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
        startValue?: Date | number | string;
    }>;
    stripStyle: {
        label?: {
            font?: Font;
            horizontalAlignment?: string;
            verticalAlignment?: string;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
    };
    synchronizedValue: number;
    tick: {
        color?: string;
        length?: number;
        opacity?: number;
        shift?: number;
        visible?: boolean;
        width?: number;
    };
    tickInterval: number | string | {
        days?: number;
        hours?: number;
        milliseconds?: number;
        minutes?: number;
        months?: number;
        quarters?: number;
        seconds?: number;
        weeks?: number;
        years?: number;
    };
    title: string | {
        alignment?: string;
        font?: Font;
        margin?: number;
        text?: string;
        textOverflow?: string;
        wordWrap?: string;
    };
    type: string;
    valueMarginsEnabled: boolean;
    valueType: string;
    visible: boolean;
    visualRange: DevExpress.viz.VizRange | Array<number | string | Date>;
    visualRangeUpdateMode: string;
    wholeRange: DevExpress.viz.VizRange | Array<number | string | Date>;
    width: number;
    /** This member supports the internal infrastructure and is not intended to be used directly from your code. */
    visualRangeChange: EventEmitter<DevExpress.viz.VizRange | Array<number | string | Date>>;
    protected readonly _optionPath: string;
    breaksChildren: QueryList<DxiBreakComponent>;
    constantLinesChildren: QueryList<DxiConstantLineComponent>;
    stripsChildren: QueryList<DxiStripComponent>;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxiValueAxisComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxiValueAxisComponent, "dxi-value-axis", never, {
    "allowDecimals": "allowDecimals";
    "autoBreaksEnabled": "autoBreaksEnabled";
    "axisDivisionFactor": "axisDivisionFactor";
    "breaks": "breaks";
    "breakStyle": "breakStyle";
    "categories": "categories";
    "color": "color";
    "constantLines": "constantLines";
    "constantLineStyle": "constantLineStyle";
    "customPosition": "customPosition";
    "discreteAxisDivisionMode": "discreteAxisDivisionMode";
    "endOnTick": "endOnTick";
    "grid": "grid";
    "inverted": "inverted";
    "label": "label";
    "linearThreshold": "linearThreshold";
    "logarithmBase": "logarithmBase";
    "max": "max";
    "maxAutoBreakCount": "maxAutoBreakCount";
    "maxValueMargin": "maxValueMargin";
    "min": "min";
    "minorGrid": "minorGrid";
    "minorTick": "minorTick";
    "minorTickCount": "minorTickCount";
    "minorTickInterval": "minorTickInterval";
    "minValueMargin": "minValueMargin";
    "minVisualRangeLength": "minVisualRangeLength";
    "multipleAxesSpacing": "multipleAxesSpacing";
    "name": "name";
    "offset": "offset";
    "opacity": "opacity";
    "pane": "pane";
    "placeholderSize": "placeholderSize";
    "position": "position";
    "showZero": "showZero";
    "strips": "strips";
    "stripStyle": "stripStyle";
    "synchronizedValue": "synchronizedValue";
    "tick": "tick";
    "tickInterval": "tickInterval";
    "title": "title";
    "type": "type";
    "valueMarginsEnabled": "valueMarginsEnabled";
    "valueType": "valueType";
    "visible": "visible";
    "visualRange": "visualRange";
    "visualRangeUpdateMode": "visualRangeUpdateMode";
    "wholeRange": "wholeRange";
    "width": "width";
}, {
    "visualRangeChange": "visualRangeChange";
}, ["breaksChildren", "constantLinesChildren", "stripsChildren"]>;
}
export declare class DxiValueAxisModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxiValueAxisModule, [typeof DxiValueAxisComponent], never, [typeof DxiValueAxisComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxiValueAxisModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,